C51 COMPILER V9.55   KS0108_8051                                                           05/05/2016 15:21:54 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE KS0108_8051
OBJECT MODULE PLACED IN .\Objects\KS0108-8051.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE KS0108-8051.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\KS0108-8051.lst) TABS(2) OBJECT(.\Objects\KS0108-8051.obj)

line level    source

   1          //-------------------------------------------------------------------------------------------------
   2          // Universal KS0108 driver library
   3          //  8051-based MCU low-level driver.
   4          // (c) Rados³aw Kwiecieñ, radek@dxp.pl
   5          //-------------------------------------------------------------------------------------------------
   6          #include <REG8253.H>
   7          
   8          #define KS0108_DATA_PORT       P2
   9          #define KS0108_DATA_DIR        P2
  10          #define KS0108_DATA_PIN        P2
  11          
  12          #define KS0108_CTRL_PORT       P1
  13          #define KS0108_CTR_DIR         P1
  14          
  15          #define KS0108_RS         (1 << 2)
  16          #define KS0108_RW         (1 << 1)
  17          #define KS0108_EN         (1 << 0)
  18          
  19          #define KS0108_CS1      (1 << 4)
  20          #define KS0108_CS2      (1 << 3)
  21          #define KS0108_CS3      (1 << 5)
  22          
  23          extern unsigned char screen_x;
  24          extern unsigned char screen_y;
  25          
  26          #define DISPLAY_STATUS_BUSY 0x80
  27          
  28          //-------------------------------------------------------------------------------------------------
  29          // Delay function
  30          //-------------------------------------------------------------------------------------------------
  31          void GLCD_Delay(void)
  32          {
  33   1      //_asm("nop");
  34   1      }
  35          //-------------------------------------------------------------------------------------------------
  36          // Enalbe Controller (0-2)
  37          //-------------------------------------------------------------------------------------------------
  38          void GLCD_EnableController(unsigned char controller)
  39          {
  40   1      switch(controller){
  41   2        case 0 : KS0108_CTRL_PORT &= ~KS0108_CS1; break;
  42   2        case 1 : KS0108_CTRL_PORT &= ~KS0108_CS2; break;
  43   2        case 2 : KS0108_CTRL_PORT &= ~KS0108_CS3; break;
  44   2        }
  45   1      }
  46          //-------------------------------------------------------------------------------------------------
  47          // Disable Controller (0-2)
  48          //-------------------------------------------------------------------------------------------------
  49          void GLCD_DisableController(unsigned char controller)
  50          {
  51   1      switch(controller){
  52   2        case 0 : KS0108_CTRL_PORT |= KS0108_CS1; break;
  53   2        case 1 : KS0108_CTRL_PORT |= KS0108_CS2; break;
  54   2        case 2 : KS0108_CTRL_PORT |= KS0108_CS3; break;
C51 COMPILER V9.55   KS0108_8051                                                           05/05/2016 15:21:54 PAGE 2   

  55   2        }
  56   1      }
  57          //-------------------------------------------------------------------------------------------------
  58          // Read Status from specified controller (0-2)
  59          //-------------------------------------------------------------------------------------------------
  60          unsigned char GLCD_ReadStatus(unsigned char controller)
  61          {
  62   1      unsigned char status;
  63   1      KS0108_DATA_DIR = 0xFF;
  64   1      KS0108_CTRL_PORT |= KS0108_RW;
  65   1      KS0108_CTRL_PORT &= ~KS0108_RS;
  66   1      GLCD_EnableController(controller);
  67   1      KS0108_CTRL_PORT |= KS0108_EN;
  68   1      GLCD_Delay();
  69   1      status = KS0108_DATA_PIN;
  70   1      KS0108_CTRL_PORT &= ~KS0108_EN;
  71   1      GLCD_DisableController(controller);
  72   1      return status;
  73   1      }
  74          
  75          //-------------------------------------------------------------------------------------------------
  76          // Write command to specified controller
  77          //-------------------------------------------------------------------------------------------------
  78          void GLCD_WriteCommand(unsigned char commandToWrite, unsigned char controller)
  79          {
  80   1      while(GLCD_ReadStatus(controller)&DISPLAY_STATUS_BUSY);
  81   1      KS0108_DATA_DIR = 0x00;
  82   1      KS0108_CTRL_PORT &= ~(KS0108_RW | KS0108_RS);
  83   1      GLCD_EnableController(controller);
  84   1      KS0108_DATA_PORT = commandToWrite;
  85   1      KS0108_CTRL_PORT |= KS0108_EN;
  86   1      GLCD_Delay();
  87   1      KS0108_CTRL_PORT &= ~KS0108_EN;
  88   1      GLCD_DisableController(controller);
  89   1      }
  90          //-------------------------------------------------------------------------------------------------
  91          // Read data from current position
  92          //-------------------------------------------------------------------------------------------------
  93          unsigned char GLCD_ReadData(void)
  94          {
  95   1      unsigned char tmp;
  96   1      while(GLCD_ReadStatus(screen_x / 64)&DISPLAY_STATUS_BUSY);
  97   1      KS0108_DATA_DIR = 0xFF;
  98   1      KS0108_CTRL_PORT |= (KS0108_RW | KS0108_RS);
  99   1      GLCD_EnableController(screen_x / 64);
 100   1      KS0108_CTRL_PORT |= KS0108_EN;
 101   1      GLCD_Delay();
 102   1      tmp = KS0108_DATA_PIN;
 103   1      KS0108_CTRL_PORT &= ~KS0108_EN;
 104   1      GLCD_DisableController(screen_x / 64);
 105   1      screen_x++;
 106   1      return tmp;
 107   1      }
 108          //-------------------------------------------------------------------------------------------------
 109          // Write data to current position
 110          //-------------------------------------------------------------------------------------------------
 111          void GLCD_WriteData(unsigned char dataToWrite)
 112          {
 113   1      while(GLCD_ReadStatus(screen_x / 64)&DISPLAY_STATUS_BUSY);
 114   1      KS0108_DATA_DIR = 0x00;
 115   1      KS0108_CTRL_PORT &= ~KS0108_RW;
 116   1      KS0108_CTRL_PORT |= KS0108_RS;
C51 COMPILER V9.55   KS0108_8051                                                           05/05/2016 15:21:54 PAGE 3   

 117   1      KS0108_DATA_PORT = dataToWrite;
 118   1      GLCD_EnableController(screen_x / 64);
 119   1      KS0108_CTRL_PORT |= KS0108_EN;
 120   1      GLCD_Delay();
 121   1      KS0108_CTRL_PORT &= ~KS0108_EN;
 122   1      GLCD_DisableController(screen_x / 64);
 123   1      screen_x++;
 124   1      }
 125          //-------------------------------------------------------------------------------------------------
 126          //
 127          //-------------------------------------------------------------------------------------------------
 128          void GLCD_InitializePorts(void)
 129          {
 130   1      //KS0108_CTRL_DIR |= (KS0108_CS1 | KS0108_CS2 | KS0108_CS3 | KS0108_RS | KS0108_RW | KS0108_EN);
 131   1      KS0108_CTRL_PORT |= (KS0108_CS1 | KS0108_CS2 | KS0108_CS3);
 132   1      }
 133          //-------------------------------------------------------------------------------------------------
 134          //
 135          //-------------------------------------------------------------------------------------------------
 136          unsigned char GLCD_ReadByteFromROMMemory(char * ptr)
 137          {
 138   1      return *(ptr);
 139   1      }
 140          //-------------------------------------------------------------------------------------------------
 141          //
 142          //-------------------------------------------------------------------------------------------------
 143          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
